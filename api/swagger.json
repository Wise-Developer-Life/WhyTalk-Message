{
  "openapi": "3.0.1",
  "info": {
    "title": "WhyTalk Message API",
    "description": "Message Service, Chat Room Service",
    "contact": {
      "name": "WiseDeveloperLife Inc.",
      "url": "https://github.com/Wise-Developer-Life"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "v1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/message": {
      "post": {
        "tags": [
          "Message Service API"
        ],
        "summary": "Create a message by api, for test only",
        "operationId": "postMessage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnResponseMessageCreateResponse"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/chatroom": {
      "post": {
        "tags": [
          "Chat Room Service API"
        ],
        "summary": "Create a one-to-one chat room",
        "operationId": "createOneToOneChatRoom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OneToOneChatRoomCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnResponseChatRoomResponse"
                }
              }
            }
          }
        }
      }
    },
    "/message/{chatRoomId}": {
      "get": {
        "tags": [
          "Message Service API"
        ],
        "summary": "Get paged messages from a chat room and sorted by created time in descending order",
        "operationId": "getAllMessages",
        "parameters": [
          {
            "name": "chatRoomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastMessageId",
            "in": "query",
            "description": "offsetId is the id of the anchor message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit is the number of messages to be returned",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnResponseScrollResponseMessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/chatroom/{userId}": {
      "get": {
        "tags": [
          "Chat Room Service API"
        ],
        "summary": "Get paged chat rooms of a user sorted by last message sent time in descending order",
        "operationId": "getOneToOneChatRoomsByUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnResponseScrollResponseChatRoomResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MessageRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "fromUser": {
            "type": "string"
          },
          "toUser": {
            "type": "string"
          },
          "chatRoomId": {
            "type": "string"
          },
          "sendDateTimestamp": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MessageCreateResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "fromUser": {
            "type": "string"
          },
          "toUser": {
            "type": "string"
          },
          "chatRoomId": {
            "type": "string"
          }
        }
      },
      "ReturnResponseMessageCreateResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/MessageCreateResponse"
          },
          "time": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "OneToOneChatRoomCreationRequest": {
        "type": "object",
        "properties": {
          "user1": {
            "type": "string"
          },
          "user2": {
            "type": "string"
          }
        }
      },
      "ChatRoomResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ReturnResponseChatRoomResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ChatRoomResponse"
          },
          "time": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string"
          },
          "fromUser": {
            "type": "string"
          },
          "toUser": {
            "type": "string"
          },
          "chatRoomId": {
            "type": "string"
          },
          "sendDateTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "readDateTimestamp": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ReturnResponseScrollResponseMessageResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ScrollResponseMessageResponse"
          },
          "time": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ScrollResponseMessageResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "isLast": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "ReturnResponseScrollResponseChatRoomResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ScrollResponseChatRoomResponse"
          },
          "time": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ScrollResponseChatRoomResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "isLast": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatRoomResponse"
            }
          }
        }
      }
    }
  }
}